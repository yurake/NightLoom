name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Sync dependencies
        run: uv sync

      - name: Run pytest
        run: uv run --extra dev pytest -v

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript type check
        run: pnpm exec tsc --noEmit

      - name: Run ESLint
        run: pnpm exec eslint . --max-warnings 0

      - name: Run Jest tests
        run: pnpm test

      - name: Set up Python for backend (E2E)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('backend/pyproject.toml', 'backend/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: Sync backend dependencies
        working-directory: ./backend
        run: uv sync

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Start backend server
        working-directory: ./backend
        run: |
          uv run uvicorn app.main:app --host 0.0.0.0 --port 8000 &
          echo $! > ../backend-server.pid

      - name: Wait for backend readiness
        run: |
          for i in {1..30}; do
            if curl -sSf http://127.0.0.1:8000/health > /dev/null; then
              exit 0
            fi
            sleep 1
          done
          echo "Backend server failed to start" >&2
          exit 1

      - name: Run Playwright E2E tests
        run: pnpm test:e2e

      - name: Stop backend server
        if: always()
        run: |
          if [ -f backend-server.pid ]; then
            kill "$(cat backend-server.pid)" || true
            rm backend-server.pid
          fi

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
